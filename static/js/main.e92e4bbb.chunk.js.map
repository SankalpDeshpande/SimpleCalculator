{"version":3,"sources":["display/display.jsx","buttons/buttons.jsx","logic/operate.js","Calculate/Calculate.js","App.jsx","index.js"],"names":["Display","props","className","this","operation","value","React","Component","Buttons","handleClick","name","clickHandler","Grid","container","spacing","item","xs","Button","variant","class","id","onClick","operate","numberOne","numberTwo","Number","toFixed","alert","Error","calculate","state","buttonName","total","next","includes","number","Infinity","isNumber","result","parseFloat","toString","App","setState","Container","fixed","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e92e4bbb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class Display extends React.Component {\r\n  static propTypes = {\r\n    value: PropTypes.string,\r\n    operation: PropTypes.string,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"containerDiv\">\r\n        <div className=\"displayOperator\">\r\n          <h1>\r\n            Operator:{this.props.operation ? this.props.operation : \"nill\"}\r\n          </h1>\r\n        </div>\r\n        <div className=\"displayNumber\">\r\n          <h1>{this.props.value}</h1>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nexport default class Buttons extends React.Component {\r\n  static propTypes = {\r\n    clickHandler: PropTypes.func,\r\n  };\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  handleClick = (name) => {\r\n    this.props.clickHandler(name);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              id=\"highlight\"\r\n              onClick={() => this.handleClick(\"AC\")}\r\n            >\r\n              AC\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"+/-\")}\r\n            >\r\n              +/-\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"%\")}\r\n            >\r\n              %\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"/\")}\r\n            >\r\n              /\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"7\")}\r\n            >\r\n              7\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"8\")}\r\n            >\r\n              8\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"9\")}\r\n            >\r\n              9\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"X\")}\r\n            >\r\n              X\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"4\")}\r\n            >\r\n              4\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"5\")}\r\n            >\r\n              5\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"6\")}\r\n            >\r\n              6\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"-\")}\r\n            >\r\n              -\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"1\")}\r\n            >\r\n              1\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"2\")}\r\n            >\r\n              2\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"3\")}\r\n            >\r\n              3\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"+\")}\r\n            >\r\n              +\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\"0\")}\r\n            >\r\n              0\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              onClick={() => this.handleClick(\".\")}\r\n            >\r\n              .\r\n            </Button>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              class=\"block\"\r\n              id=\"highlight\"\r\n              onClick={() => this.handleClick(\"=\")}\r\n            >\r\n              =\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function operate(numberOne, numberTwo, operation) {\r\n  if (operation === \"+\") {\r\n    return Number(numberOne) + Number(numberTwo);\r\n  }\r\n  if (operation === \"-\") {\r\n    return (Number(numberOne) - Number(numberTwo)).toFixed(8);\r\n  }\r\n  if (operation === \"X\") {\r\n    return Number(numberOne) * Number(numberTwo);\r\n  }\r\n  if (operation === \"/\") {\r\n    if (numberTwo === \"0\") {\r\n      alert(\"Divide by 0 error\");\r\n      return \"0\";\r\n    } else {\r\n      return Number(numberOne) / Number(numberTwo);\r\n    }\r\n  }\r\n  throw Error(`Unknown operation '${operation}'`);\r\n}\r\n","/**\r\n * Given a button name and a calculator data object, return an updated\r\n * calculator data object.\r\n *\r\n * Calculator data object contains:\r\n *   total:String      the running total\r\n *   next:String       the next number to be operated on with the total\r\n *   operation:String  +, -, etc.\r\n */\r\nimport operate from \"../logic/operate\";\r\n\r\nfunction isNumber(value){\r\n  const number = Number(value);\r\n  return typeof number === 'number' && number === number && number !== Infinity && number !== -Infinity;\r\n}\r\n\r\nexport const calculate = (state, buttonName) =>{\r\n    if (buttonName === \"AC\") {\r\n        return {\r\n          total: null,\r\n          next: null,\r\n          operation: null\r\n        };\r\n      }\r\n\r\n      if (buttonName === \".\") {\r\n        if (state.next) {\r\n          // ignore a . if the next number already has one\r\n          if (state.next.includes(\".\")) {\r\n            return {};\r\n          }\r\n          return { next: state.next + \".\" };\r\n        }\r\n        return { next: \"0.\" };\r\n      }\r\n\r\n      if (isNumber(buttonName)) {\r\n        if (buttonName === \"0\" && state.next === \"0\") {\r\n          return {};\r\n        }\r\n        // If there is an operation, update next\r\n        if (state.operation) {\r\n          if (state.next) {\r\n            return { next: state.next + buttonName };\r\n          }\r\n          return { next: buttonName };\r\n        }\r\n        // If there is no operation, update next and clear the value\r\n        if (state.next) {\r\n          const next = state.next === \"0\" ? buttonName : state.next + buttonName;\r\n          return {\r\n            next,\r\n            total: null,\r\n          };\r\n        }\r\n        return {\r\n          next: buttonName,\r\n          total: null,\r\n        };\r\n      }\r\n\r\n      if (buttonName === \"%\") {\r\n        if (state.operation && state.next) {\r\n          const result = operate(state.total, state.next, state.operation);\r\n          return {\r\n            total: operate(result, 100, \"X\"),\r\n            next: null,\r\n            operation: null,\r\n          };\r\n        }\r\n        if (state.next) {\r\n          return {\r\n            next: operate(state.next, 100, \"/\")\r\n          };\r\n        }\r\n        return {\r\n          total: operate(state.total, 100, \"/\")\r\n        };\r\n      }\r\n\r\n      if (buttonName === \"+/-\") {\r\n        if (state.next) {\r\n          return { next: (-1 * parseFloat(state.next)).toString() };\r\n        }\r\n        if (state.total) {\r\n          return { total: (-1 * parseFloat(state.total)).toString() };\r\n        }\r\n        return {};\r\n      }\r\n\r\n      if (buttonName === \"=\") {\r\n        if (state.next && state.operation) {\r\n          return {\r\n            total: operate(state.total, state.next, state.operation),\r\n            next: null,\r\n            operation: null,\r\n          };\r\n        } else {\r\n          // '=' with no operation, nothing to do\r\n          return {};\r\n        }\r\n      }\r\n      if (state.operation) {\r\n        return {\r\n          total: operate(state.total, state.next, state.operation),\r\n          next: null,\r\n          operation: buttonName,\r\n        };\r\n      }\r\n      return {\r\n        total: state.next,\r\n        next: null,\r\n        operation: buttonName,\r\n      };\r\n};","import React from \"react\";\r\nimport Display from \"./display/display\";\r\nimport Buttons from \"./buttons/buttons\";\r\nimport { calculate } from \"./Calculate/Calculate\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      total: null,\r\n      next: null,\r\n      operation: null,\r\n    };\r\n  }\r\n\r\n  handleClick = (name) => {\r\n    this.setState(calculate(this.state, name));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Display\r\n          value={this.state.next || this.state.total || \"0\"}\r\n          operation={this.state.operation}\r\n        />\r\n\r\n        <Container fixed>\r\n          <div>\r\n            <Buttons clickHandler={this.handleClick} />\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}